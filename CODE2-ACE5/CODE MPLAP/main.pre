
# 1 "C:\Users\Administrator\Desktop\CODE2-ACE5\CODE MPLAP\main.c"

# 19 "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\include\pic16f887.h"
volatile unsigned char INDF @ 0x000;
volatile unsigned char TMR0 @ 0x001;
volatile unsigned char PCL @ 0x002;
volatile unsigned char STATUS @ 0x003;
volatile unsigned char FSR @ 0x004;
volatile unsigned char PORTA @ 0x005;
volatile unsigned char PORTB @ 0x006;
volatile unsigned char PORTC @ 0x007;

volatile unsigned char PORTD @ 0x008;

volatile unsigned char PORTE @ 0x009;
volatile unsigned char PCLATH @ 0x00A;
volatile unsigned char INTCON @ 0x00B;
volatile unsigned char PIR1 @ 0x00C;
volatile unsigned char PIR2 @ 0x00D;
volatile unsigned char TMR1L @ 0x00E;
volatile unsigned char TMR1H @ 0x00F;
volatile unsigned char T1CON @ 0x010;
volatile unsigned char TMR2 @ 0x011;
volatile unsigned char T2CON @ 0x012;
volatile unsigned char SSPBUF @ 0x013;
volatile unsigned char SSPCON @ 0x014;
volatile unsigned char CCPR1L @ 0x015;
volatile unsigned char CCPR1H @ 0x016;
volatile unsigned char CCP1CON @ 0x017;
volatile unsigned char RCSTA @ 0x018;
volatile unsigned char TXREG @ 0x019;
volatile unsigned char RCREG @ 0x01A;
volatile unsigned char CCPR2L @ 0x01B;
volatile unsigned char CCPR2H @ 0x01C;
volatile unsigned char CCP2CON @ 0x01D;
volatile unsigned char ADRESH @ 0x01E;
volatile unsigned char ADCON0 @ 0x01F;
volatile unsigned char OPTION @ 0x081;
volatile unsigned char TRISA @ 0x085;
volatile unsigned char TRISB @ 0x086;
volatile unsigned char TRISC @ 0x087;

volatile unsigned char TRISD @ 0x088;

volatile unsigned char TRISE @ 0x089;
volatile unsigned char PIE1 @ 0x08C;
volatile unsigned char PIE2 @ 0x08D;
volatile unsigned char PCON @ 0x08E;
volatile unsigned char OSCCON @ 0x08F;
volatile unsigned char OSCTUNE @ 0x090;
volatile unsigned char SSPCON2 @ 0x091;
volatile unsigned char PR2 @ 0x092;
volatile unsigned char SSPADD @ 0x093;
volatile unsigned char SSPMSK @ 0x093;
volatile unsigned char SSPSTAT @ 0x094;
volatile unsigned char WPUB @ 0x095;
volatile unsigned char IOCB @ 0x096;
volatile unsigned char VRCON @ 0x097;
volatile unsigned char TXSTA @ 0x098;
volatile unsigned char SPBRG @ 0x099;
volatile unsigned char SPBRGH @ 0x09A;
volatile unsigned char PWM1CON @ 0x09B;
volatile unsigned char ECCPAS @ 0x09C;
volatile unsigned char PSTRCON @ 0x09D;
volatile unsigned char ADRESL @ 0x09E;
volatile unsigned char ADCON1 @ 0x09F;
volatile unsigned char WDTCON @ 0x105;
volatile unsigned char CM1CON0 @ 0x107;
volatile unsigned char CM2CON0 @ 0x108;
volatile unsigned char CM2CON1 @ 0x109;
volatile unsigned char EEDAT @ 0x10C;

volatile unsigned char EEDATA @ 0x10C;
volatile unsigned char EEADR @ 0x10D;

volatile unsigned char EEADRL @ 0x10D;
volatile unsigned char EEDATH @ 0x10E;
volatile unsigned char EEADRH @ 0x10F;
volatile unsigned char SRCON @ 0x185;
volatile unsigned char BAUDCTL @ 0x187;
volatile unsigned char ANSEL @ 0x188;
volatile unsigned char ANSELH @ 0x189;
volatile unsigned char EECON1 @ 0x18C;
volatile unsigned char EECON2 @ 0x18D;



volatile bit CARRY @ ((unsigned)&STATUS*8)+0;
volatile bit DC @ ((unsigned)&STATUS*8)+1;
volatile bit ZERO @ ((unsigned)&STATUS*8)+2;
volatile bit PD @ ((unsigned)&STATUS*8)+3;
volatile bit TO @ ((unsigned)&STATUS*8)+4;
volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
volatile bit IRP @ ((unsigned)&STATUS*8)+7;


volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
volatile bit RA6 @ ((unsigned)&PORTA*8)+6;
volatile bit RA7 @ ((unsigned)&PORTA*8)+7;


volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
volatile bit RB7 @ ((unsigned)&PORTB*8)+7;


volatile bit RC0 @ ((unsigned)&PORTC*8)+0;
volatile bit RC1 @ ((unsigned)&PORTC*8)+1;
volatile bit RC2 @ ((unsigned)&PORTC*8)+2;
volatile bit RC3 @ ((unsigned)&PORTC*8)+3;
volatile bit RC4 @ ((unsigned)&PORTC*8)+4;
volatile bit RC5 @ ((unsigned)&PORTC*8)+5;
volatile bit RC6 @ ((unsigned)&PORTC*8)+6;
volatile bit RC7 @ ((unsigned)&PORTC*8)+7;



volatile bit RD0 @ ((unsigned)&PORTD*8)+0;
volatile bit RD1 @ ((unsigned)&PORTD*8)+1;
volatile bit RD2 @ ((unsigned)&PORTD*8)+2;
volatile bit RD3 @ ((unsigned)&PORTD*8)+3;
volatile bit RD4 @ ((unsigned)&PORTD*8)+4;
volatile bit RD5 @ ((unsigned)&PORTD*8)+5;
volatile bit RD6 @ ((unsigned)&PORTD*8)+6;
volatile bit RD7 @ ((unsigned)&PORTD*8)+7;


volatile bit RE0 @ ((unsigned)&PORTE*8)+0;
volatile bit RE1 @ ((unsigned)&PORTE*8)+1;
volatile bit RE2 @ ((unsigned)&PORTE*8)+2;

volatile bit RE3 @ ((unsigned)&PORTE*8)+3;


volatile bit RBIF @ ((unsigned)&INTCON*8)+0;

volatile bit RABIF @ ((unsigned)&INTCON*8)+0;
volatile bit INTF @ ((unsigned)&INTCON*8)+1;
volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
volatile bit RBIE @ ((unsigned)&INTCON*8)+3;

volatile bit RABIE @ ((unsigned)&INTCON*8)+3;
volatile bit INTE @ ((unsigned)&INTCON*8)+4;
volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
volatile bit GIE @ ((unsigned)&INTCON*8)+7;


volatile bit TMR1IF @ ((unsigned)&PIR1*8)+0;
volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
volatile bit CCP1IF @ ((unsigned)&PIR1*8)+2;
volatile bit SSPIF @ ((unsigned)&PIR1*8)+3;
volatile bit TXIF @ ((unsigned)&PIR1*8)+4;
volatile bit RCIF @ ((unsigned)&PIR1*8)+5;
volatile bit ADIF @ ((unsigned)&PIR1*8)+6;


volatile bit CCP2IF @ ((unsigned)&PIR2*8)+0;
volatile bit ULPWUIF @ ((unsigned)&PIR2*8)+2;
volatile bit BCLIF @ ((unsigned)&PIR2*8)+3;
volatile bit EEIF @ ((unsigned)&PIR2*8)+4;
volatile bit C1IF @ ((unsigned)&PIR2*8)+5;
volatile bit C2IF @ ((unsigned)&PIR2*8)+6;
volatile bit OSFIF @ ((unsigned)&PIR2*8)+7;


volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;
volatile bit TMR1CS @ ((unsigned)&T1CON*8)+1;
volatile bit T1SYNC @ ((unsigned)&T1CON*8)+2;
volatile bit T1OSCEN @ ((unsigned)&T1CON*8)+3;
volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
volatile bit TMR1GE @ ((unsigned)&T1CON*8)+6;
volatile bit T1GINV @ ((unsigned)&T1CON*8)+7;


volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;


volatile bit SSPM0 @ ((unsigned)&SSPCON*8)+0;
volatile bit SSPM1 @ ((unsigned)&SSPCON*8)+1;
volatile bit SSPM2 @ ((unsigned)&SSPCON*8)+2;
volatile bit SSPM3 @ ((unsigned)&SSPCON*8)+3;
volatile bit CKP @ ((unsigned)&SSPCON*8)+4;
volatile bit SSPEN @ ((unsigned)&SSPCON*8)+5;
volatile bit SSPOV @ ((unsigned)&SSPCON*8)+6;
volatile bit WCOL @ ((unsigned)&SSPCON*8)+7;


volatile bit CCP1M0 @ ((unsigned)&CCP1CON*8)+0;
volatile bit CCP1M1 @ ((unsigned)&CCP1CON*8)+1;
volatile bit CCP1M2 @ ((unsigned)&CCP1CON*8)+2;
volatile bit CCP1M3 @ ((unsigned)&CCP1CON*8)+3;
volatile bit DC1B0 @ ((unsigned)&CCP1CON*8)+4;
volatile bit DC1B1 @ ((unsigned)&CCP1CON*8)+5;
volatile bit P1M0 @ ((unsigned)&CCP1CON*8)+6;
volatile bit P1M1 @ ((unsigned)&CCP1CON*8)+7;


volatile bit RX9D @ ((unsigned)&RCSTA*8)+0;
volatile bit OERR @ ((unsigned)&RCSTA*8)+1;
volatile bit FERR @ ((unsigned)&RCSTA*8)+2;
volatile bit ADDEN @ ((unsigned)&RCSTA*8)+3;
volatile bit CREN @ ((unsigned)&RCSTA*8)+4;
volatile bit SREN @ ((unsigned)&RCSTA*8)+5;
volatile bit RX9 @ ((unsigned)&RCSTA*8)+6;
volatile bit SPEN @ ((unsigned)&RCSTA*8)+7;


volatile bit CCP2M0 @ ((unsigned)&CCP2CON*8)+0;
volatile bit CCP2M1 @ ((unsigned)&CCP2CON*8)+1;
volatile bit CCP2M2 @ ((unsigned)&CCP2CON*8)+2;
volatile bit CCP2M3 @ ((unsigned)&CCP2CON*8)+3;
volatile bit CCP2Y @ ((unsigned)&CCP2CON*8)+4;
volatile bit CCP2X @ ((unsigned)&CCP2CON*8)+5;


volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;


volatile bit PS0 @ ((unsigned)&OPTION*8)+0;
volatile bit PS1 @ ((unsigned)&OPTION*8)+1;
volatile bit PS2 @ ((unsigned)&OPTION*8)+2;
volatile bit PSA @ ((unsigned)&OPTION*8)+3;
volatile bit T0SE @ ((unsigned)&OPTION*8)+4;
volatile bit T0CS @ ((unsigned)&OPTION*8)+5;
volatile bit INTEDG @ ((unsigned)&OPTION*8)+6;
volatile bit RBPU @ ((unsigned)&OPTION*8)+7;

volatile bit RABPU @ ((unsigned)&OPTION*8)+7;


volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
volatile bit TRISA6 @ ((unsigned)&TRISA*8)+6;
volatile bit TRISA7 @ ((unsigned)&TRISA*8)+7;


volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;


volatile bit TRISC0 @ ((unsigned)&TRISC*8)+0;
volatile bit TRISC1 @ ((unsigned)&TRISC*8)+1;
volatile bit TRISC2 @ ((unsigned)&TRISC*8)+2;
volatile bit TRISC3 @ ((unsigned)&TRISC*8)+3;
volatile bit TRISC4 @ ((unsigned)&TRISC*8)+4;
volatile bit TRISC5 @ ((unsigned)&TRISC*8)+5;
volatile bit TRISC6 @ ((unsigned)&TRISC*8)+6;
volatile bit TRISC7 @ ((unsigned)&TRISC*8)+7;



volatile bit TRISD0 @ ((unsigned)&TRISD*8)+0;
volatile bit TRISD1 @ ((unsigned)&TRISD*8)+1;
volatile bit TRISD2 @ ((unsigned)&TRISD*8)+2;
volatile bit TRISD3 @ ((unsigned)&TRISD*8)+3;
volatile bit TRISD4 @ ((unsigned)&TRISD*8)+4;
volatile bit TRISD5 @ ((unsigned)&TRISD*8)+5;
volatile bit TRISD6 @ ((unsigned)&TRISD*8)+6;
volatile bit TRISD7 @ ((unsigned)&TRISD*8)+7;


volatile bit TRISE0 @ ((unsigned)&TRISE*8)+0;
volatile bit TRISE1 @ ((unsigned)&TRISE*8)+1;
volatile bit TRISE2 @ ((unsigned)&TRISE*8)+2;

volatile bit TRISE3 @ ((unsigned)&TRISE*8)+3;


volatile bit TMR1IE @ ((unsigned)&PIE1*8)+0;
volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
volatile bit CCP1IE @ ((unsigned)&PIE1*8)+2;
volatile bit SSPIE @ ((unsigned)&PIE1*8)+3;
volatile bit TXIE @ ((unsigned)&PIE1*8)+4;
volatile bit RCIE @ ((unsigned)&PIE1*8)+5;
volatile bit ADIE @ ((unsigned)&PIE1*8)+6;


volatile bit CCP2IE @ ((unsigned)&PIE2*8)+0;
volatile bit ULPWUIE @ ((unsigned)&PIE2*8)+2;
volatile bit BCLIE @ ((unsigned)&PIE2*8)+3;
volatile bit EEIE @ ((unsigned)&PIE2*8)+4;
volatile bit C1IE @ ((unsigned)&PIE2*8)+5;
volatile bit C2IE @ ((unsigned)&PIE2*8)+6;
volatile bit OSFIE @ ((unsigned)&PIE2*8)+7;


volatile bit BOR @ ((unsigned)&PCON*8)+0;
volatile bit POR @ ((unsigned)&PCON*8)+1;
volatile bit SBOREN @ ((unsigned)&PCON*8)+4;
volatile bit ULPWUE @ ((unsigned)&PCON*8)+5;


volatile bit SCS @ ((unsigned)&OSCCON*8)+0;
volatile bit LTS @ ((unsigned)&OSCCON*8)+1;
volatile bit HTS @ ((unsigned)&OSCCON*8)+2;
volatile bit OSTS @ ((unsigned)&OSCCON*8)+3;
volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;


volatile bit TUN0 @ ((unsigned)&OSCTUNE*8)+0;
volatile bit TUN1 @ ((unsigned)&OSCTUNE*8)+1;
volatile bit TUN2 @ ((unsigned)&OSCTUNE*8)+2;
volatile bit TUN3 @ ((unsigned)&OSCTUNE*8)+3;
volatile bit TUN4 @ ((unsigned)&OSCTUNE*8)+4;


volatile bit SEN @ ((unsigned)&SSPCON2*8)+0;
volatile bit RSEN @ ((unsigned)&SSPCON2*8)+1;
volatile bit PEN @ ((unsigned)&SSPCON2*8)+2;
volatile bit RCEN @ ((unsigned)&SSPCON2*8)+3;
volatile bit ACKEN @ ((unsigned)&SSPCON2*8)+4;
volatile bit ACKDT @ ((unsigned)&SSPCON2*8)+5;
volatile bit ACKSTAT @ ((unsigned)&SSPCON2*8)+6;
volatile bit GCEN @ ((unsigned)&SSPCON2*8)+7;


volatile bit BF @ ((unsigned)&SSPSTAT*8)+0;
volatile bit UA @ ((unsigned)&SSPSTAT*8)+1;
volatile bit RW @ ((unsigned)&SSPSTAT*8)+2;
volatile bit START @ ((unsigned)&SSPSTAT*8)+3;
volatile bit STOP @ ((unsigned)&SSPSTAT*8)+4;
volatile bit DA @ ((unsigned)&SSPSTAT*8)+5;
volatile bit CKE @ ((unsigned)&SSPSTAT*8)+6;
volatile bit SMP @ ((unsigned)&SSPSTAT*8)+7;


volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;


volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;


volatile bit VR0 @ ((unsigned)&VRCON*8)+0;
volatile bit VR1 @ ((unsigned)&VRCON*8)+1;
volatile bit VR2 @ ((unsigned)&VRCON*8)+2;
volatile bit VR3 @ ((unsigned)&VRCON*8)+3;
volatile bit VRSS @ ((unsigned)&VRCON*8)+4;
volatile bit VRR @ ((unsigned)&VRCON*8)+5;
volatile bit VROE @ ((unsigned)&VRCON*8)+6;
volatile bit VREN @ ((unsigned)&VRCON*8)+7;


volatile bit TX9D @ ((unsigned)&TXSTA*8)+0;
volatile bit TRMT @ ((unsigned)&TXSTA*8)+1;
volatile bit BRGH @ ((unsigned)&TXSTA*8)+2;
volatile bit SENDB @ ((unsigned)&TXSTA*8)+3;
volatile bit SYNC @ ((unsigned)&TXSTA*8)+4;
volatile bit TXEN @ ((unsigned)&TXSTA*8)+5;
volatile bit TX9 @ ((unsigned)&TXSTA*8)+6;
volatile bit CSRC @ ((unsigned)&TXSTA*8)+7;


volatile bit BRG0 @ ((unsigned)&SPBRG*8)+0;
volatile bit BRG1 @ ((unsigned)&SPBRG*8)+1;
volatile bit BRG2 @ ((unsigned)&SPBRG*8)+2;
volatile bit BRG3 @ ((unsigned)&SPBRG*8)+3;
volatile bit BRG4 @ ((unsigned)&SPBRG*8)+4;
volatile bit BRG5 @ ((unsigned)&SPBRG*8)+5;
volatile bit BRG6 @ ((unsigned)&SPBRG*8)+6;
volatile bit BRG7 @ ((unsigned)&SPBRG*8)+7;


volatile bit BRG8 @ ((unsigned)&SPBRGH*8)+0;
volatile bit BRG9 @ ((unsigned)&SPBRGH*8)+1;
volatile bit BRG10 @ ((unsigned)&SPBRGH*8)+2;
volatile bit BRG11 @ ((unsigned)&SPBRGH*8)+3;
volatile bit BRG12 @ ((unsigned)&SPBRGH*8)+4;
volatile bit BRG13 @ ((unsigned)&SPBRGH*8)+5;
volatile bit BRG14 @ ((unsigned)&SPBRGH*8)+6;
volatile bit BRG15 @ ((unsigned)&SPBRGH*8)+7;


volatile bit PDC0 @ ((unsigned)&PWM1CON*8)+0;
volatile bit PDC1 @ ((unsigned)&PWM1CON*8)+1;
volatile bit PDC2 @ ((unsigned)&PWM1CON*8)+2;
volatile bit PDC3 @ ((unsigned)&PWM1CON*8)+3;
volatile bit PDC4 @ ((unsigned)&PWM1CON*8)+4;
volatile bit PDC5 @ ((unsigned)&PWM1CON*8)+5;
volatile bit PDC6 @ ((unsigned)&PWM1CON*8)+6;
volatile bit PRSEN @ ((unsigned)&PWM1CON*8)+7;


volatile bit PSSBD0 @ ((unsigned)&ECCPAS*8)+0;
volatile bit PSSBD1 @ ((unsigned)&ECCPAS*8)+1;
volatile bit PSSAC0 @ ((unsigned)&ECCPAS*8)+2;
volatile bit PSSAC1 @ ((unsigned)&ECCPAS*8)+3;
volatile bit ECCPAS0 @ ((unsigned)&ECCPAS*8)+4;
volatile bit ECCPAS1 @ ((unsigned)&ECCPAS*8)+5;
volatile bit ECCPAS2 @ ((unsigned)&ECCPAS*8)+6;
volatile bit ECCPASE @ ((unsigned)&ECCPAS*8)+7;


volatile bit STRA @ ((unsigned)&PSTRCON*8)+0;
volatile bit STRB @ ((unsigned)&PSTRCON*8)+1;
volatile bit STRC @ ((unsigned)&PSTRCON*8)+2;
volatile bit STRD @ ((unsigned)&PSTRCON*8)+3;
volatile bit STRSYNC @ ((unsigned)&PSTRCON*8)+4;


volatile bit VCFG0 @ ((unsigned)&ADCON1*8)+4;
volatile bit VCFG1 @ ((unsigned)&ADCON1*8)+5;
volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;


volatile bit SWDTEN @ ((unsigned)&WDTCON*8)+0;
volatile bit WDTPS0 @ ((unsigned)&WDTCON*8)+1;
volatile bit WDTPS1 @ ((unsigned)&WDTCON*8)+2;
volatile bit WDTPS2 @ ((unsigned)&WDTCON*8)+3;
volatile bit WDTPS3 @ ((unsigned)&WDTCON*8)+4;


volatile bit C1CH0 @ ((unsigned)&CM1CON0*8)+0;
volatile bit C1CH1 @ ((unsigned)&CM1CON0*8)+1;
volatile bit C1R @ ((unsigned)&CM1CON0*8)+2;
volatile bit C1POL @ ((unsigned)&CM1CON0*8)+4;
volatile bit C1OE @ ((unsigned)&CM1CON0*8)+5;
volatile bit C1OUT @ ((unsigned)&CM1CON0*8)+6;
volatile bit C1ON @ ((unsigned)&CM1CON0*8)+7;


volatile bit C2CH0 @ ((unsigned)&CM2CON0*8)+0;
volatile bit C2CH1 @ ((unsigned)&CM2CON0*8)+1;
volatile bit C2R @ ((unsigned)&CM2CON0*8)+2;
volatile bit C2POL @ ((unsigned)&CM2CON0*8)+4;
volatile bit C2OE @ ((unsigned)&CM2CON0*8)+5;
volatile bit C2OUT @ ((unsigned)&CM2CON0*8)+6;
volatile bit C2ON @ ((unsigned)&CM2CON0*8)+7;


volatile bit C2SYNC @ ((unsigned)&CM2CON1*8)+0;
volatile bit T1GSS @ ((unsigned)&CM2CON1*8)+1;
volatile bit C2RSEL @ ((unsigned)&CM2CON1*8)+4;
volatile bit C1RSEL @ ((unsigned)&CM2CON1*8)+5;
volatile bit MC2OUT @ ((unsigned)&CM2CON1*8)+6;
volatile bit MC1OUT @ ((unsigned)&CM2CON1*8)+7;


volatile bit FVREN @ ((unsigned)&SRCON*8)+0;
volatile bit PULSR @ ((unsigned)&SRCON*8)+2;
volatile bit PULSS @ ((unsigned)&SRCON*8)+3;
volatile bit C2REN @ ((unsigned)&SRCON*8)+4;
volatile bit C1SEN @ ((unsigned)&SRCON*8)+5;
volatile bit SR0 @ ((unsigned)&SRCON*8)+6;
volatile bit SR1 @ ((unsigned)&SRCON*8)+7;


volatile bit ABDEN @ ((unsigned)&BAUDCTL*8)+0;
volatile bit WUE @ ((unsigned)&BAUDCTL*8)+1;
volatile bit BRG16 @ ((unsigned)&BAUDCTL*8)+3;
volatile bit SCKP @ ((unsigned)&BAUDCTL*8)+4;
volatile bit RCIDL @ ((unsigned)&BAUDCTL*8)+6;
volatile bit ABDOVF @ ((unsigned)&BAUDCTL*8)+7;


volatile bit ANS0 @ ((unsigned)&ANSEL*8)+0;
volatile bit ANS1 @ ((unsigned)&ANSEL*8)+1;
volatile bit ANS2 @ ((unsigned)&ANSEL*8)+2;
volatile bit ANS3 @ ((unsigned)&ANSEL*8)+3;
volatile bit ANS4 @ ((unsigned)&ANSEL*8)+4;

volatile bit ANS5 @ ((unsigned)&ANSEL*8)+5;
volatile bit ANS6 @ ((unsigned)&ANSEL*8)+6;
volatile bit ANS7 @ ((unsigned)&ANSEL*8)+7;



volatile bit ANS8 @ ((unsigned)&ANSELH*8)+0;
volatile bit ANS9 @ ((unsigned)&ANSELH*8)+1;
volatile bit ANS10 @ ((unsigned)&ANSELH*8)+2;
volatile bit ANS11 @ ((unsigned)&ANSELH*8)+3;
volatile bit ANS12 @ ((unsigned)&ANSELH*8)+4;
volatile bit ANS13 @ ((unsigned)&ANSELH*8)+5;


volatile bit RD @ ((unsigned)&EECON1*8)+0;
volatile bit WR @ ((unsigned)&EECON1*8)+1;
volatile bit WREN @ ((unsigned)&EECON1*8)+2;
volatile bit WRERR @ ((unsigned)&EECON1*8)+3;
volatile bit EEPGD @ ((unsigned)&EECON1*8)+7;


# 503 "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\include\pic.h"
#pragma inline(_nop)
extern void _nop(void);

# 556
extern unsigned int flash_read(unsigned short addr);

# 41 "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\include\eeprom_routines.h"
extern void eeprom_write(unsigned char addr, unsigned char value);
extern unsigned char eeprom_read(unsigned char addr);


# 629 "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\include\pic.h"
#pragma inline(_delay)
extern void _delay(unsigned long);

# 3 "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\include\math.h"
extern double fabs(double);
extern double floor(double);
extern double ceil(double);
extern double modf(double, double *);
extern double sqrt(double);
extern double atof(const char *);
extern double sin(double);
extern double cos(double);
extern double tan(double);
extern double asin(double);
extern double acos(double);
extern double atan(double);
extern double atan2(double, double);
extern double log(double);
extern double log10(double);
extern double pow(double, double);
extern double exp(double);
extern double sinh(double);
extern double cosh(double);
extern double tanh(double);
extern double eval_poly(double, const double *, int);
extern double frexp(double, int *);
extern double ldexp(double, int);
extern double fmod(double, double);
extern double trunc(double);
extern double round(double);

# 12 "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\include\stdio.h"
typedef int ptrdiff_t;
typedef unsigned size_t;
typedef unsigned short wchar_t;

# 31 "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\include\stdarg.h"
typedef void * va_list[1];

#pragma inline(__va_start)
extern void * __va_start(void);

#pragma inline(__va_arg)
extern void * __va_arg(void *, ...);

# 27 "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\include\stdio.h"
extern int errno;

# 58
struct __prbuf
{
char * ptr;
void (* func)(char);
};

# 17 "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\include\conio.h"
extern int errno;


extern void init_uart(void);

extern char getch(void);
extern char getche(void);
extern void putch(char);
extern void ungetch(char);

extern bit kbhit(void);

# 31
extern char * cgets(char *);
extern void cputs(const char *);

# 103 "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\include\stdio.h"
extern int cprintf(char *, ...);
#pragma printf_check(cprintf)



extern int _doprnt(struct __prbuf *, const register char *, register va_list);

# 195
extern char * gets(char *);
extern int puts(const char *);
extern int scanf(const char *, ...);
extern int sscanf(const char *, const char *, ...);
extern int vprintf(const char *, va_list);
extern int vsprintf(char *, const char *, va_list);
extern int vscanf(const char *, va_list ap);
extern int vsscanf(const char *, const char *, va_list);

#pragma printf_check(printf) const
#pragma printf_check(sprintf) const
extern int sprintf(char *, const char *, ...);
extern int printf(const char *, ...);

# 6 "C:\Users\Administrator\Desktop\CODE2-ACE5\CODE MPLAP\main.c"
asm("\tpsect config,class=CONFIG,delta=2"); asm("\tdw ""0x3FFA & 0x3FF7 & 0x3FEF & 0x3FFF & 0x3FFF & 0x3FFF & 0x3CFF & 0x3BFF & 0x37FF & 0x2FFF");

# 54 "C:\Users\Administrator\Desktop\CODE2-ACE5\CODE MPLAP\lcd.h"
typedef union _BYTE_VAL
{
unsigned char Val;
struct
{
unsigned char b0:1;
unsigned char b1:1;
unsigned char b2:1;
unsigned char b3:1;
unsigned char b4:1;
unsigned char b5:1;
unsigned char b6:1;
unsigned char b7:1;
} bits;
} BYTE_VAL;

void lcd_init();
unsigned char lcd_busy();
unsigned char lcd_get_byte(unsigned char rs);
void lcd_put_byte(unsigned char a,unsigned char b);
void lcd_gotoxy(unsigned char col, unsigned char row);
void lcd_putc(char c);
void lcd_puts(const char* s);

# 28 "C:\Users\Administrator\Desktop\CODE2-ACE5\CODE MPLAP\main.c"
void BH1750_init();
void BH1750_write();
unsigned long BH1750_read();
void delay_ms(int x);
void uart_tx(char data);
void pid();
void nhiet_do();
void xu_ly_lux();
void send_nhietdo();
void send_lux();
void receive_pid();
void send_error();
void err_phantram ();
unsigned char save=0,check[10],check1;
int value=0;
int k=0;
int pre_err=0,output=0;
int lux_set,kp5;
int kq,nhietdo1=0,kq2=0;
int kqkp=0,kqkd=0,kqki=0,temp;
int flux1,flux2,m,fnt1,fnt2,n;
int value2,value3;
float value1=0;
float kp1,ki1,kd1;
float err=0;
float dosang=0;
float nhietdo=0;

char dosang1;
char biennt1,biennt2;
char nghinlux,tramlux,chuclux,dvilux;
unsigned char nghin,tram,chuc,dvi,nghin1,tram1,chuc1,dvi1;
unsigned char nt1,nt2,chuc1, dvi1,chuc2,dvi2;
char c;



void uart_tx(char data)
{
TXREG =data;
while(TXIF==0);

}
void interrupt uart_isr()
{
if(RCIE && RCIF)
{
check[save]=RCREG;
save++;
if(save==7)
{
save=0;

}
}
if(T0IF && T0IE)
{
T0IF=0;
TMR0=131;
k++;
if(k==250)
{
BH1750_read();
k=0;


}

}
}


void delay_ms(int x)
{
int i=0;
for(;i<x;i++)
{
_delay(1000);
}
}


void i2c_dly(void)
{
;
}
void I2C_start(void)
{
TRISC4 = 1;
i2c_dly();
TRISC3 = 1;
i2c_dly();
TRISC4 = 0;
i2c_dly();
TRISC3 = 0;
i2c_dly();
}

void I2C_stop(void)
{
TRISC4 = 0;
i2c_dly();
TRISC3 = 1;
i2c_dly();
TRISC4 = 1;
i2c_dly();
}
unsigned char I2C_read (char ack)
{
char x, d=0;
TRISC4 = 1;
for(x=0; x<8; x++)
{
d <<= 1;
do
{
TRISC3 = 1;
}while(RC3==0);

i2c_dly();
if(RC4) d |= 1;
TRISC3 = 0;
}
if(ack) TRISC4 = 0;
else TRISC4 = 1;
TRISC3 = 1;
i2c_dly();
TRISC3 = 0;
TRISC4 = 1;
return d;
}

bit I2C_write(unsigned char d)
{
char x;
static bit b;
for(x=8; x; x--) {
if(d&0x80) TRISC4 = 1;
else TRISC4 = 0;
TRISC3 = 1;
d <<= 1;
TRISC3 = 0;
}
TRISC4 = 1;
TRISC3 = 1;
i2c_dly();
b = RC4;

TRISC3 = 0;
return b;
}




void BH1750_init()
{
delay_ms(100);
BH1750_write(0x00);
}


void BH1750_write()
{
I2C_start();
I2C_write(0x46);
I2C_write(0x10);
I2C_stop();
}


unsigned long BH1750_read()
{
unsigned char lb = 0;
unsigned char hb = 0;
I2C_start();
I2C_write(0x47);
hb = I2C_read(1);
lb = I2C_read(0);
I2C_stop();
value =(hb<<8)+lb;
value1=(float)value/1.2;
}


void nhiet_do()
{
GODONE=1;
while(GODONE);
kq=ADRESH;
kq<<=8;
delay_ms(200);
kq=kq+ADRESL;
nhietdo=((float)(500*kq)/1023.0);

fnt1=(nhietdo/1);
nt1=(fnt1/10)+48;
nt2=(fnt1%10)+48;
lcd_gotoxy(0, 0);
lcd_puts("nhietdo: ");
lcd_gotoxy(8,0);
lcd_putc(nt1);
lcd_putc(nt2);
lcd_putc('.');

for(n=0;n<2;n++)
{
fnt2=(nhietdo-fnt1)*10;
chuc2=fnt2/10+48;
dvi2=fnt2%10+48;
}
lcd_putc(chuc2);
lcd_putc(dvi2);
}
void xu_ly_lux()
{
lcd_gotoxy(0, 1);
lcd_puts("lux: ");
lcd_gotoxy(6, 1);
lcd_putc(nghin);
lcd_putc(tram);
lcd_putc(chuc);
lcd_putc(dvi);
lcd_putc('.');
lcd_putc(chuc1);
lcd_putc(dvi1);
lcd_putc(dvi1);
delay_ms(300);
flux1=value1/1;
nghin=(flux1/1000)+48;
tram=((flux1%1000)/100)+48;
chuc=(((flux1%1000)%100)/10)+48;
dvi=(((flux1%1000)%100)%10)+48;
for(m=0;m<2;m++)
{
flux2=(value1-flux1)*10;
chuc1=(flux2%10)+48;
dvi1=(flux2/10)+48;
}
}
void send_lux()
{
value2=value1*10;
nghinlux=(value2/1000);
tramlux=((value2%1000)/100);
chuclux=(((value2%1000)%100)/10);
dvilux=(((value2%1000)%100)%10);

uart_tx(nghinlux);
uart_tx(tramlux);
uart_tx(chuclux);
uart_tx(dvilux);
delay_ms(200);
}
void receive_pid()
{
int chuckp, bienkp1, bienkp2,bienki1,bienki2,bienkd1,bienkd2,p,i,d;
int nghinkp,tramkp,chuckp,dvikp,tramki,chucki,dviki,tramkd,chuckd,dvikd;
int nghinout,tramout,chucout,dviout;
int fkp,fki,fkd;
kp1=((check[0])/10.0);
ki1=((check[1])/10.0);
kd1=((check[2])/10.0);
lux_set=check[3]*1000+check[4]*100+check[5]*10+check[6];
delay_ms(50);
}
void putch(char c)
{
lcd_putc(c);
}



void main()
{

ANSEL=0;
ANSELH=0;
lcd_init();

SPBRGH=0;
BRG16=1;
SPBRG=129;
TXSTA=0x20;
RCSTA=0x90;
SYNC=0;
c=RCREG;
RCIE=1;
PEIE=1;
GIE=1;

PORTC=0;
TRISC1=0;
TRISC2=0;
CCP1CON=0X0C;
T2CON=0X01;
TMR2ON=1;
PR2=255;

ANS2=1;
VCFG0=VCFG1=0;
ADCS0=ADCS1=1;
ADFM=1;
CHS3=0;
CHS2=0;
CHS1=1;
CHS0=0;
ADON=1;

T0CS=0;
PSA=0;
T0SE=1;
PS0=PS2=0;
PS1=1;
TMR0=131;
T0IE=1;
delay_ms(1000);
BH1750_write();

while(1)
{

xu_ly_lux();
nhiet_do();
send_lux();
receive_pid();

}
}

